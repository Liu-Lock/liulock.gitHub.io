<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://lausuman.github.io</id>
    <title>Lausuman</title>
    <updated>2024-05-25T09:23:48.657Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://lausuman.github.io"/>
    <link rel="self" href="https://lausuman.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://lausuman.github.io/images/avatar.png</logo>
    <icon>https://lausuman.github.io/favicon.ico</icon>
    <rights>All rights reserved 2024, Lausuman</rights>
    <entry>
        <title type="html"><![CDATA[记一次自动约羽毛球场]]></title>
        <id>https://lausuman.github.io/post/ji-yi-ci-zi-dong-yue-yu-mao-qiu-chang/</id>
        <link href="https://lausuman.github.io/post/ji-yi-ci-zi-dong-yue-yu-mao-qiu-chang/">
        </link>
        <updated>2024-05-21T04:43:28.000Z</updated>
        <content type="html"><![CDATA[<p>项目背景：每天约羽毛球好累，有时候忘了约场还没有球可以打，有没有办法用计算机自动约场呢？</p>
<p>于是我登录预约平台发现咋验证码改了与字母验证码相比，这自动识别难度可增加太多了，既然有这个需求那只有硬着头皮上了，去Google搜索了一下看到python有个很好用的库ddddocr可以将点击验证码的文字部分与背景分割开，于是开始了漫长的开发之路</p>
<h1 id="一-小试牛刀登录">一、小试牛刀——登录</h1>
<p>首先摆在我面前的第一个拦路虎是预约平台的登录，这个预约平台登录验证方式是通过SSO的方式验证登录的于是我尝试去Github上找同一学校的自动化脚本<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>，该脚本的登录实现解析如下：</p>
<ol>
<li>首先初始化登录界面<img src="https://lausuman.github.io/post-images/1716287069688.png" alt="" loading="lazy"></li>
<li>将用户的账号密码发送到sso平台（吐槽一下，上传用户的账号密码竟然是用明文传输😂）<img src="https://lausuman.github.io/post-images/1716287190093.png" alt="" loading="lazy"></li>
<li>初始化用户信息，将用户姓名、部门、电话保存下来<img src="https://lausuman.github.io/post-images/1716287221564.png" alt="" loading="lazy"></li>
<li>向<code>https://sso.scnu.edu.cn/AccountService/openapi/onekeyapp.html?app_id=61</code>这个链接发送GET请求<img src="https://lausuman.github.io/post-images/1716287249585.png" alt="" loading="lazy"></li>
<li>将步骤4请求的返回值中的&quot;Location&quot;作为这次GET请求链接，保存这次GET请求返回值&quot;cookies&quot;中的'MoodleSession'<img src="https://lausuman.github.io/post-images/1716287274554.png" alt="" loading="lazy"></li>
</ol>
<p>我在该脚本基础修改了一下步骤四中的app_id值，并且将步骤五中的保存内容改为GET请求返回值&quot;cookies&quot;</p>
<h1 id="二-深陷泥潭验证码">二、深陷泥潭——验证码</h1>
<p>登录问题解决了，摆在面前的难关就是如何通过验证码校验了，首先先手动过验证查看网页向远程服务器发送了什么消息<img src="https://lausuman.github.io/post-images/1716308659823.png" alt="" loading="lazy">原来向远端发送了data[captchaType]、data[pointJson]、data[token]，于是我pointJson放到source里面查找，发现这个<br>
<img src="https://lausuman.github.io/post-images/1716298598126.png" alt="" loading="lazy">感觉胜利就在眼前了哈哈，接下来我们就只用看懂这个函数究竟在干什么就行。</p>
<p>我们先看简单的token: e.backToken老方法先在js里搜一搜有没有哪个函数生成了这个值，搜了一圈发现好像没有哪个函数生成了这个值。思路似乎在这里卡住了，但是我们想一想如果这个值不是在本地生产的那就一定是远程服务器给他的，于是我们继续回到Network里面看看<img src="https://lausuman.github.io/post-images/1716299879195.png" alt="" loading="lazy">哈哈发现个好东西token原来就是远端服务器给我们的啊，只是换了个变量名。</p>
<p>token我们解决了，现在就是理解pointJson值是咋来的了，<img src="https://lausuman.github.io/post-images/1716342112240.png" alt="" loading="lazy"></p>
<p>观察下<img src="https://lausuman.github.io/post-images/1716307782796.png" alt="" loading="lazy"> pointTransfrom函数接受两个参数：一个数组 t 和一个对象 e，这个函数的功能是将我们点击的坐标值等比映射到原图上。</p>
<p>分析到这里有个问题就浮现了出来，我是人我自然知道怎么点击验证码，但是机器不知道应该点击验证码，不过上文的pointTransfrom函数隐隐透露了一点，远端确认你是否带点中验证码是通过你点击的坐标值来判断的。根据此，我们可以将点击验证码问题转换成按照远端期待的顺序传递文字的坐标，然后再进行拆解以下是拆解成的步骤</p>
<ol>
<li>先将验证码图片中的文字定位</li>
<li>再将验证码图片的文字分割出来</li>
<li>将分割出来的文字OCR识别为文本</li>
<li>按照wordlist的文字顺序依次获得图片中文字坐标范围</li>
<li>将依次获得的坐标范围除于2，再POST到远端</li>
</ol>
<p>至此我们以及完全了解本地向远端发送了什么，并且也了解了发送的数据来自于哪里以及怎么来的。接下来做的事情就很简单了，将之前分析的Js代码全部转换为Python代码</p>
<h1 id="三-曙光初见发送预约请求">三、曙光初见——发送预约请求</h1>
<p>通过抓包可以发现captchaVerification是t的值<img src="https://lausuman.github.io/post-images/1716345479702.png" alt="" loading="lazy"><br>
于是我们就去source里面找t<img src="https://lausuman.github.io/post-images/1716353011017.png" alt="" loading="lazy">这又是一个三目运算符他的逻辑是如果 e.secretKey 是真值，t 将被赋予e.backToken + &quot;---&quot; + JSON.stringify(e.checkPosArr)经过函数 u 运算后返回的值；否则，它将被赋予 e.backToken + &quot;---&quot; + JSON.stringify(e.checkPosArr)，u()函数我们之前解释过是一个加密函数。那么我们只需要调用之前以及python化的代码即可。</p>
<h1 id="四-临门一脚-提交表单">四、临门一脚--提交表单</h1>
<p>这一步很简单抓包重放即可</p>
<h1 id="总结">总结</h1>
<p>本次开发耗时的步骤并不是分析加密逻辑以及重写代码，而是格式化字符，以及将数据按照格式发送到远程，我不知道大佬们会不会在这几个步骤上卡住，我想到的解决方法只有多去练习。</p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p>https://github.com/saiGou-14H/SCNU_LRYCourse <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用GitHub Codespaces构建GUI应用]]></title>
        <id>https://lausuman.github.io/post/shi-yong-github-codespaces-gou-jian-gui-ying-yong/</id>
        <link href="https://lausuman.github.io/post/shi-yong-github-codespaces-gou-jian-gui-ying-yong/">
        </link>
        <updated>2024-04-20T16:38:43.000Z</updated>
        <content type="html"><![CDATA[<h1 id="背景知识">背景知识</h1>
<p>Github Codespaces 可以让你在云端上开发，这样可以帮助你从安装运行环境的麻烦中解脱出来，并且可以与你的团队伙伴保持相同的开发环境进行开发。</p>
<p>那么如果你想使用Github Codespace开发GUI应用应该怎么办呢？当你在无头环境如何运行GUI程序呢？本文就是为了解决该问题而写作的。</p>
<h1 id="答案就是vnc">答案就是VNC！！</h1>
<p>VNC是一个图形桌面分享系统使用RFB(Remote Frame Buffer)协议来操控远程计算机。</p>
<h2 id="如何安装vnc">如何安装VNC？</h2>
<p>我们可以手动安装VNC到Codespace环境也可以选择自动安装它，显然为了偷懒我们使用官方的简易安装方法来安装，我们只需要在<code>devcontainer.json</code>中添加:</p>
<pre><code>{
	&quot;image&quot;: &quot;mcr.microsoft.com/devcontainers/universal:2&quot;,
	&quot;features&quot;: {
		&quot;ghcr.io/devcontainers/features/desktop-lite:1&quot;: {
			&quot;version&quot;: &quot;latest&quot;,
			&quot;noVncVersion&quot;: &quot;1.2.0&quot;,
			&quot;password&quot;: &quot;codespaces&quot;,
			&quot;webPort&quot;: &quot;6080&quot;,
			&quot;vncPort&quot;: &quot;5901&quot;
		}
	},
	&quot;forwardPorts&quot;: [5901],
	  &quot;portsAttributes&quot;: {
			&quot;5901&quot;: { 
		  &quot;label&quot;: &quot;VNC desktop&quot;
			}
		}
}
</code></pre>
<p>如果我们没有<code>devcontainer.json</code>的话，我们可以在VS Code命令行内输入<code>&gt;Codespaces: Add Development Container Configuration Files...</code><br>
<img src="https://lausuman.github.io/post-images/1713633657820.png" alt="" loading="lazy"><br>
选择<code>Create New Configuration</code>然后在<code>devcontainer.json</code>中输入上面的命令</p>
<h2 id="用vnc连接codespace">用VNC连接Codespace</h2>
<p>这一步相当的简单只需要在VNC连接软件内输入<code>localhost:5901</code>即可连接，密码为<code>codespaces</code><br>
<img src="https://lausuman.github.io/post-images/1713634076091.png" alt="" loading="lazy"><br>
看到这个界面就说明成功了，你可以在VS Code里面编写GUI程序了！</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[摩托车头盔镜片贴膜]]></title>
        <id>https://lausuman.github.io/post/mo-tuo-che-tou-kui-jing-pian-tie-mo/</id>
        <link href="https://lausuman.github.io/post/mo-tuo-che-tou-kui-jing-pian-tie-mo/">
        </link>
        <updated>2024-03-23T14:53:10.000Z</updated>
        <content type="html"><![CDATA[<h1 id="尝试过程">尝试过程</h1>
<ul>
<li>1、首先尝试将一大片膜摆在头盔镜片上用美工刀划出形状，后将离型膜撕开贴上，用刮刀刮去气泡发现气泡没有刮掉反而会将膜挂出褶皱至此第一次尝试失败</li>
<li>2、首先与第一次尝试一样将一大片膜摆在头盔镜片上用美工刀划出形状，但使用了肥皂水涂抹在头盔镜片上，再用电吹风加热尝试将贴膜吹软，尝试后发现膜无法被吹软，且使用刮刀刮后呈现和第一次尝试的现象相似，第二次尝试失败</li>
<li>3、尝试将膜用手拉直后贴在头盔镜片上，从中间开始贴，使用了肥皂水涂抹在头盔镜片上，发现涂抹完肥皂水后，膜根本沾不上镜片只能吸附在镜片上，用电吹风加热后又回到第一次尝试时的情况了，至此三次尝试均已失败告终</li>
</ul>
<h1 id="总结">总结</h1>
<p>经过这三次的总结，我发现我的失败原因都是因为出现褶皱产生的，因此如果想把摩托车镜片贴一块无气泡和褶皱的膜的方法必须是将左右两头先固定好，保持中间膜无受力，这样才能做到无褶皱，至于怎么做到无气泡就要等下一步尝试了</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[汽车共地噪声解决方案]]></title>
        <id>https://lausuman.github.io/post/2/</id>
        <link href="https://lausuman.github.io/post/2/">
        </link>
        <updated>2024-03-15T15:48:34.000Z</updated>
        <content type="html"><![CDATA[<p><strong>需要准备的：</strong><br>
车载蓝牙接收器<br>
DC12V-DC5V电源隔离器</p>
<h1 id="正文">正文</h1>
<p>一开始我是从CD机的保险丝处接一路电源供给给接收器，中间用12V（保险丝）转5V（接收器）变压器连接，接好后蓝牙接收器正常启动且可以听歌，但是当CD机音箱声音提高后喇叭的噪声十分明显。一开始尝试使用网上随处可以买到的音频隔离器，但是将音箱插入后低音部分全部被削弱了。这个方案肯定行不通，于是我上网查找资料后了解到，该噪声为共地噪声，形成原因是信号端的地线与功放端的地线在一起。使用隔离电源将信号端与功放端的地线隔离开就可以解决这个噪声干扰了，随即我就去tb上买了隔离电源<img src="https://lausuman.github.io/post-images/1710482740547.JPG" alt="" width="300" height="300" loading="lazy">从tb上买到后，按照这个图接线，开机，汽车音箱的噪声立马消失。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[CS50_(2023) ProblemSet4 - more_filter 题解]]></title>
        <id>https://lausuman.github.io/post/cs50_2023-problemset4-more_filter-ti-jie/</id>
        <link href="https://lausuman.github.io/post/cs50_2023-problemset4-more_filter-ti-jie/">
        </link>
        <updated>2024-02-22T02:23:44.000Z</updated>
        <content type="html"><![CDATA[<h1 id="题目说明">题目说明</h1>
<p>题目出自 Harvard CS50x 课程第四周作业习题</p>
<p>目的是编写一个程序进行BMP图像处理</p>
<h1 id="grayscale-灰度">grayscale 灰度</h1>
<p>我们把一个像素的红色、绿色、蓝色的值都设置为<code>0x00</code>则该像素为纯黑，把一个像素的红色、绿色、蓝色的值都设置为<code>0xff</code>则该像素为纯白，因此只要使红、绿、蓝三者数值相等，该像素的颜色就介于纯黑和纯白之间。</p>
<p>因此，我们只用使红、绿、蓝数值相等就可以得到灰度图像了，但是红、绿、蓝的具体数值怎么确定呢？为了确保新图像的每个像素仍然与旧图像的每个像素拥有相同的亮度或暗度，我们可以通过取原始红、绿、蓝数值的平均数来确定。</p>
<pre><code>void grayscale(int height, int width, RGBTRIPLE image[height][width])
{
    float avg;
    // 遍历图形中的每个像素
    for (int i = 0; i &lt; height; i++)
    {
        for (int j = 0; j &lt; width; j++)
        {
            // 取红绿蓝的平均值
            avg = (image[i][j].rgbtBlue + image[i][j].rgbtRed + image[i][j].rgbtGreen) / 3.0;
            // 四舍五入后赋值给源像素
            image[i][j].rgbtBlue = (int) round(avg);
            image[i][j].rgbtRed = (int) round(avg);
            image[i][j].rgbtGreen = (int) round(avg);
        }
    }
    return;
}
</code></pre>
<h1 id="reflect-翻转">reflect 翻转</h1>
<p>为了实现反转图像我们仅需将左边的像素放到右边<br>
<img src="https://lausuman.github.io/post-images/1708575619712.png" alt="" loading="lazy"></p>
<p>观察图片可以猜想，像素左右对调后的坐标就等于宽 - 自己的横坐标 - 1</p>
<pre><code>void reflect(int height, int width, RGBTRIPLE image[height][width])
{
    BYTE buffer;

    // 遍历图形中的每个像素
    for (int i = 0; i &lt; height; i++)
    {
        for (int j = 0; j &lt; width / 2; j++)
        {
            buffer = image[i][j].rgbtBlue;
            image[i][j].rgbtBlue = image[i][width - j - 1].rgbtBlue;
            image[i][width - j - 1].rgbtBlue = buffer;

            buffer = image[i][j].rgbtRed;
            image[i][j].rgbtRed = image[i][width - j - 1].rgbtRed;
            image[i][width - j - 1].rgbtRed = buffer;

            buffer = image[i][j].rgbtGreen;
            image[i][j].rgbtGreen = image[i][width - j - 1].rgbtGreen;
            image[i][width - j - 1].rgbtGreen = buffer;
        }
    }
    return;
}
</code></pre>
<h1 id="blur-模糊">blur 模糊</h1>
<p>每个像素的新值是以像素为中心，画一个3x3 框，求框内像素值的平均值。以6为例，6的颜色值是1、2、3、5、6、7、9、10 、11 原始颜色值的平均值<br>
<img src="https://lausuman.github.io/post-images/1708580519951.png" alt="" loading="lazy"></p>
<p>对于边缘像素来说，则是以该像素为中心，画一个3x3 框，求在该框内且同时在图片中的像素值的平均值。以1为例，1的颜色值是2、5、6原始颜色值的平均值<img src="https://lausuman.github.io/post-images/1708580695350.png" alt="" loading="lazy"></p>
<p>因此我们可以推断出以任意一个像素画框，画框的范围不能超过图片宽度和高度。同时要注意不能使求平均值后的像素立刻赋值到原始图片中，不然这样下一个像素的周围像素值就会被改变。</p>
<pre><code>void blur(int height, int width, RGBTRIPLE image[height][width])
{
    RGBTRIPLE tempImage[height][width];

    // 遍历图形中的每个像素
    for (int i = 0; i &lt; height; i++)
    {
        for (int j = 0; j &lt; width; j++)
        {
            float tempRGB[3] = {0.0,0.0,0.0};
            float times = 0.0;

            //遍历该像素周围的像素
            for (int k = -1; k &lt; 2; k++)
            {
                for (int l = -1; l &lt; 2; l++)
                {
                    //进行框是否在图片内的判断
                    if (i + k &gt;= 0 &amp;&amp; j + l &gt;= 0 &amp;&amp; i + k &lt; height &amp;&amp; j + l &lt; width)
                    {
                        tempRGB[0] += image[i + k][j + l].rgbtRed;
                        tempRGB[1] += image[i + k][j + l].rgbtGreen;
                        tempRGB[2] += image[i + k][j + l].rgbtBlue;
                        times += 1.0;
                    }
                }
            }

            //对该像素周围像素的值求平均值
            for (int m = 0; m &lt; 3; m++)
            {
                tempRGB[m] /= times;
            }

            //将模糊化后的像素值存入temp图片中
            tempImage[i][j].rgbtRed = (int) round(tempRGB[0]);
            tempImage[i][j].rgbtGreen = (int) round(tempRGB[1]);
            tempImage[i][j].rgbtBlue = (int) round(tempRGB[2]);
        }
    }

    //将temp图片值复制给原图片
    for (int i = 0; i &lt; height; i++)
    {
        for (int j = 0; j &lt; width; j++)
        {
            image[i][j].rgbtRed = tempImage[i][j].rgbtRed;
            image[i][j].rgbtGreen = tempImage[i][j].rgbtGreen;
            image[i][j].rgbtBlue = tempImage[i][j].rgbtBlue;
        }

    }

    return;
}
</code></pre>
<h1 id="edges-识别边缘">Edges 识别边缘</h1>
<p>这个函数实现和前面那个很像，值得提醒的是这里对待超出图片范围的像素是视为0的。</p>
<pre><code>void edges(int height, int width, RGBTRIPLE image[height][width])
{
    RGBTRIPLE tempImage[height][width];
    //生成存放Gx和Gy的二位数组
    int Gx[3][3] = {{-1, 0, 1}, {-2, 0, 2}, {-1, 0, 1}};
    int Gy[3][3] = {{-1, -2, -1}, {0, 0, 0}, {1, 2, 1}};

    // 遍历图形中的每个像素
    for (int i = 0; i &lt; height; i++)
    {
        for (int j = 0; j &lt; width; j++)
        {
            //临时存放该像素周围与Gx和Gy相乘后的颜色值
            float tempRGB_Gx[3] = {0.0,0.0,0.0};
            float tempRGB_Gy[3] = {0.0,0.0,0.0};

            //遍历该像素周围3x3的像素
            for (int k = -1; k &lt; 2; k++)
            {
                for (int l = -1; l &lt; 2; l++)
                {
                    //进行框是否在图片内的判断
                    if (i + k &gt;= 0 &amp;&amp; j + l &gt;= 0 &amp;&amp; i + k &lt; height &amp;&amp; j + l &lt; width)
                    {
                        tempRGB_Gx[0] += (image[i + k][j + l].rgbtRed) * Gx[k+1][l+1];
                        tempRGB_Gy[0] += (image[i + k][j + l].rgbtRed) * Gy[k+1][l+1];

                        tempRGB_Gx[1] += (image[i + k][j + l].rgbtGreen) * Gx[k+1][l+1];
                        tempRGB_Gy[1] += (image[i + k][j + l].rgbtGreen) * Gy[k+1][l+1];

                        tempRGB_Gx[2] += (image[i + k][j + l].rgbtBlue) * Gx[k+1][l+1];
                        tempRGB_Gy[2] += (image[i + k][j + l].rgbtBlue) * Gy[k+1][l+1];

                    }
                }
            }

            int red = (int)round(sqrt(pow(tempRGB_Gx[0], 2) + pow(tempRGB_Gy[0], 2)));
            int green = (int)round(sqrt(pow(tempRGB_Gx[1], 2) + pow(tempRGB_Gy[1], 2)));
            int blue = (int)round(sqrt(pow(tempRGB_Gx[2], 2) + pow(tempRGB_Gy[2], 2)));
            //将值限定在0~255之间
            red = (red &gt; 255) ? 255 : ((red &lt; 0) ? 0 : red);
            green = (green &gt; 255) ? 255 : ((green &lt; 0) ? 0 : green);
            blue = (blue &gt; 255) ? 255 : ((blue &lt; 0) ? 0 : blue);

            //将运算后的像素值存入temp图片中
            tempImage[i][j].rgbtRed = red;
            tempImage[i][j].rgbtGreen = green;
            tempImage[i][j].rgbtBlue = blue;

        }
    }

    //将temp图片值复制给原图片
    for (int i = 0; i &lt; height; i++)
    {
        for (int j = 0; j &lt; width; j++)
        {
            image[i][j].rgbtRed = tempImage[i][j].rgbtRed;
            image[i][j].rgbtGreen = tempImage[i][j].rgbtGreen;
            image[i][j].rgbtBlue = tempImage[i][j].rgbtBlue;
        }

    }

    return;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[esp8266 rc522]]></title>
        <id>https://lausuman.github.io/post/esp8266-rc522/</id>
        <link href="https://lausuman.github.io/post/esp8266-rc522/">
        </link>
        <updated>2023-04-16T09:30:38.000Z</updated>
        <content type="html"><![CDATA[<p>修改示例程序</p>
<pre><code>#define RST_PIN 5
#define SS_PIN 4
</code></pre>
<p>接线法<br>
<img src="https://lausuman.github.io/post-images/1681637552944.png" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[C program language]]></title>
        <id>https://lausuman.github.io/post/c-program-language/</id>
        <link href="https://lausuman.github.io/post/c-program-language/">
        </link>
        <updated>2023-04-15T03:24:03.000Z</updated>
        <content type="html"><![CDATA[<h1 id="习题1-9">习题1-9</h1>
<p>编写一个将输入复制到输出的程序，并将其中连续的多个空格用一个空格代替。<br>
思路</p>
<ul>
<li>1、首先判断输入的字符是否是空格，若是计数器+1，若否则打印当前字符并把计数器清零</li>
<li>2、计数器+1后判断计数器是否小于2，若是则打印当前空格，若否则不打印当前空格，并把计数器-1</li>
</ul>
<pre><code>#include &lt;stdio.h&gt;

int main(){
  int c;
  int count;
  while ((c=getchar()) != EOF)
  {
    if(c == ' ')
    {
      ++count;
      if (count &lt; 2)
      {
        putchar(c);
      }
      else{
        --count;
      }
    }
    else{
      putchar(c);
      count = 0;
    }
  }
}
</code></pre>
<h1 id="习题1-13">习题1-13</h1>
<p>编写一个程序，打印输入中单词长度的直方图。水平方向的直方图比较容易绘制，垂直方向的直方图则要困难些。<br>
水平版本</p>
<pre><code>#include &lt;stdio.h&gt;

int main(){
    int c=0;
    int array[3]={0,0,0};
    
    while ((c = getchar()) != '\n')
    {
        if (c &gt;= 'a' &amp;&amp; c &lt;= 'z' || c &gt;= 'A' &amp;&amp; c &lt;= 'Z')
        {
            array[0] = array[0]+1;
        }
        else if (c &gt;= '0' &amp;&amp; c &lt;='9')
        {
            array[1] =array[1]+1;
        }
        else 
        {
            array[2] =array[2]+1;
        }
    }
    for (int b = 0; b &lt; 3; b++)
    {
       for (int  i = 0; i &lt; array[b]; i++)
       {
        printf(&quot;*&quot;);
       }
       printf(&quot;%d\n&quot;, array[b]);
    }   
}
</code></pre>
<h1 id="习题1-14">习题1-14</h1>
<p>编写一个程序，打印输入中各个字符出现频度的直方图</p>
<pre><code>#include &lt;stdio.h&gt;

int main(){
    int array[26];
    int c;
    for (int i = 0; i &lt; 26; i++)
    {
        array[i] = 0;
    }
    while ((c = getchar())!= '\n' )
    {
        if(c &gt;= 'A' &amp;&amp; c &lt;= 'Z'){
            array[c - 65]++;
        }
        else if (c &gt;='a' &amp;&amp; c &lt;='z')
        {
            array[c - 97]++;
        }
    }
    for (int b = 0; b &lt; 26; b++)
    {
       printf(&quot;%c&quot;, b + 65);
       for (int  i = 0; i &lt; array[b]; i++)
       {
        printf(&quot;*&quot;);
       }
       printf(&quot;%d\n&quot;, array[b]);
    } 
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Cisco Aironet series 3500 WEB configuration]]></title>
        <id>https://lausuman.github.io/post/cisco-aironet-ap3g1ap3g2-85-ban-ben-pang-ap-gu-jian-wang-ye-pei-zhi-jiao-cheng/</id>
        <link href="https://lausuman.github.io/post/cisco-aironet-ap3g1ap3g2-85-ban-ben-pang-ap-gu-jian-wang-ye-pei-zhi-jiao-cheng/">
        </link>
        <updated>2023-04-11T00:02:58.000Z</updated>
        <content type="html"><![CDATA[<p>转自：https://blog.swineson.me/zh/cisco-aironet-ap3g1-ap3g2-ver-8-5-autonomous-web-portal-config-tutorial/</p>
<h1 id="部署硬件">部署硬件</h1>
<p>这系列AP有一个支持802.11af PoE（48V）的千兆有线网口。如果你的AP没有随附电源或者部署的位置不便安放电源，可以考虑使用支持802.11af的交换机，或者购买PoE Injector</p>
<p>3xxx系列AP都是设计为挂在天花板上的，天线具有方向性，平放（倒着挂天花板上，或者正着平放都行）速率最快。竖立放置可能导致无线速率显著降低。另外请不要用导热不良的物体覆盖AP或者将AP放在易燃物附近，因为AP工作时温度较高。3xxx系列AP正面有一定防泼溅能力，但是请不要在室外或潮湿环境使用，也不要让反面的端口接触到水。</p>
<p>连接电源，LED灯将会按顺序变化：绿色闪烁（正在加载系统）-&gt;黄绿色常亮（正在开机）-&gt;绿色常亮（开机完成，等待设备连入），整个过程大概三四分钟的样子。一个配置为空的AP在绿色灯常亮后就会尝试DHCP获取IP（默认主机名为ap，很好辨认）。</p>
<p>在绿色灯常亮后，打开浏览器，输入AP的IP地址（<code>http://192.168.1.x</code>），使用默认用户名Cisco和密码Cisco（首字母均大写）登录，就可以访问AP的管理面板了。</p>
<p>如果一切正常的话，你将看到以下页面：<br>
<img src="https://lausuman.github.io/post-images/1681171577510.png" alt="" loading="lazy"></p>
<p>关于管理面板的注意事项：</p>
<ul>
<li>
<p>访问管理面板时请各位事先禁用广告屏蔽插件（加白名单也行），并且允许弹出窗口，以免功能不正常</p>
</li>
<li>
<p>管理面板如果弹出“ERROR: Error occured while clearing Browser credentials.”的提示，可以直接忽略，不影响正常使用</p>
</li>
<li>
<p>管理面板响应慢、个别图片加载不出来、短暂无法访问都是正常的，请不要同时打开多个页面，不要高速点击不同的一级导航，不要快速频繁刷新</p>
</li>
<li>
<p>管理面板右上角有一个“Save Configuration”按钮；你对AP做的所有配置都会实时生效，但是只有点击了这个按钮，这些配置才会在下次开机的时候应用（这是一个安全机制：当你做了错误的配置导致你也无法连接上AP时，你肯定是无法保存配置的，这时直接重启就会还原你刚才所做的更改）</p>
</li>
<li>
<p>本文中的配置在Apply时可能会弹出各种提示对话框，文中不再一一详述，点击确定即可</p>
</li>
<li>
<p>下文把网页的顶部横向导航栏称为一级导航，左侧的导航栏称为二级导航；标注操作流程时会用“一级导航菜单项-&gt;二级导航菜单项”的写法。每个一级导航都有对应的一个默认信息页面；如果只写了一级导航菜单项，那么就是需要进入这个信息页面，无需点击任何二级导航菜单项</p>
</li>
</ul>
<h1 id="更新固件">更新固件</h1>
<p>点击一级导航上的SOFTWARE，可以查看AP的当前固件版本。本文全部按照ap3g1的最新固件15.3(3)JF9版本来作演示；如果你手上的AP固件版本低于这一版本，建议更新到最新版。</p>
<p>更新固件非常简单，打开SOFTWARE-&gt;Software upgrade，在HTTP UPGRADE选项卡上点击Choose File选择固件文件，再点击Upgrade即可。过程中会弹出三个网页对话框，如果你没有允许网页弹出对话框，更新会失败；关闭已经弹出来的框，在浏览器选项中手工允许所有弹框，然后重复这一过程即可。如果一切正常，你会看到如下图所示的三个对话框：<br>
<img src="https://lausuman.github.io/post-images/1681171614520.png" alt="" loading="lazy"></p>
<p>更新完后AP会自动重启。</p>
<h1 id="启用telnet或ssh">启用Telnet或SSH</h1>
<p>网页版有一些bug会导致一些功能无法正确设置（后面会讲到），因此我们需要事先启用Telnet或者SSH。AP默认会启用Telnet。</p>
<p>前往SERVICES-&gt;Telnet/SSH，启用其中至少一个。在管理面板启用的SSH是SSHv1，已经不被大多数现代的SSH客户端所支持，连接比较麻烦。为了方便教学，下文会使用Telnet；但是Telnet是不安全的明文协议，建议不要在非可信网络环境中使用。文末会附上启用相对安全的SSHv2协议的方法。<br>
<img src="https://lausuman.github.io/post-images/1681171725349.png" alt="" loading="lazy"></p>
<p>你需要下载一个Telnet或SSH客户端。大多数操作系统都自带一个Telnet客户端；或者你可以使用PuTTY之类的第三方软件。</p>
<h1 id="无线网络配置">无线网络配置</h1>
<p>每个无线网络均需要按顺序在VLAN，Encryption，SSID三处创建对应的设置。严格按照此步骤配置就不会出错。</p>
<h1 id="vlan">VLAN</h1>
<p>每个无线网络设置都从一个新VLAN开始。前往SERVICES-&gt;VLAN创建一个VLAN。如果你不知道VLAN是什么意思，那么请按照下图所示填写，然后点击Apply。<br>
<img src="https://lausuman.github.io/post-images/1681171752768.png" alt="" loading="lazy"></p>
<p>如果你需要将无线终端设备置入特定的VLAN中，在这个页面左侧点击<NEW>，填写正确的VLAN ID，不要勾选Native VLAN，勾选上两个Radio，点击Apply即可。注意，即使无线客户端不需要连入你的native VLAN，你也需要事先创建native VLAN，因为AP的网络初始化和DHCP会在native VLAN上进行。如果你的管理网VLAN不是native VLAN，那么你还需要再创建一个管理VLAN，勾选上Management VLAN选项。</p>
<h1 id="encryption">Encryption</h1>
<p>我们要设置的第二项内容是这个VLAN对应的安全等级。前往SECURITY-&gt;Encryption Manager，在“<br>
Set Encryption Mode and Keys for VLAN”一项中选择刚刚创建的VLAN，在下面选择你想要的加密等级。如果你对此页面中的术语一无所知，并且希望在保证主流设备兼容性（这迫使我们关闭一些安全特性）的前提下使用较为现代的加密方式的话，可以按照下图的设置：</p>
<ul>
<li>Encryption Modes选择Cipher，并在后面的下拉选单中选择AES CCMP</li>
<li>Encryption Keys请保持默认，不需要填写</li>
<li>Global Properties请不要开启其中任何功能</li>
</ul>
<p><img src="https://lausuman.github.io/post-images/1681171890177.png" alt="" loading="lazy"><br>
完成后点击右下角的Apply。</p>
<h1 id="ssid">SSID</h1>
<p>这个页面很长，主要分为两个模块：SSID Properties和Guest Mode/Infrastructure SSID Settings。前者需要在每次创建SSID的时候都设置一遍，后者只需要在创建完第一个SSID以后设置一次即可。</p>
<h1 id="ssid-properties模块">SSID Properties模块</h1>
<p>这里总共有四部分需要手工配置。</p>
<p>第一部分：SSID名称和VLAN。左边列表选择<NEW>，填写你想要的SSID，选择对应的VLAN，勾选全部Interface即可。填好以后向下滚动。<br>
<img src="https://lausuman.github.io/post-images/1681172051609.png" alt="" loading="lazy"></p>
<p>第二部分：WEP设置。WEP是一个过时了的加密技术，我们一般用的WPA2加密要求禁用WEP，因此在这里我们选择Open Authentication（不加密），后面的附加认证选项选择<NO ADDITION>。其它选项保持默认即可，如下图所示。</p>
<p>如果你想做MAC白名单，可以在这里的附加认证方式中配置with MAC Authentication，不详述。<br>
<img src="https://lausuman.github.io/post-images/1681172059611.png" alt="" loading="lazy"></p>
<p>第三部分：WPA设置。一般我们会使用WPA2，那么如下图所示设置：</p>
<ul>
<li>Key Management：Mandatory</li>
<li>Enable WPA：勾选，然后在后面的下拉选单中选择WPAv2</li>
<li>WPA Pre-shared Key：输入一般意义上的“Wi-Fi密码“，并且在后面的单选按钮组中选择ASCII</li>
<li>11w Configuration：建议选择Optional，这样同样支持此功能的客户端就会开启Management Frame保护功能，避免被deauth攻击</li>
<li>下面的IDS Client MFP是Cisco的私有协议，功能和802.11w基本相同，一般用不到，建议关闭</li>
</ul>
<figure data-type="image" tabindex="1"><img src="https://lausuman.github.io/post-images/1681172081940.png" alt="" loading="lazy"></figure>
<p>第三部分往后有一大块完全不需要配置的功能，请直接跳过。</p>
<p>第四部分：SSID广播。如果你需要广播SSID，则勾选Set SSID as Guest Mode；反之（隐藏SSID）则不勾选。</p>
<p>所有配置完成后，点击本模块的Apply按钮（不是页面最下方的Apply按钮！）。</p>
<h1 id="guest-modeinfrastructure-ssid-settings模块">Guest Mode/Infrastructure SSID Settings模块</h1>
<p>在第一个SSID创建完成以后，需要配置一次本模块；以后不需要更改配置。</p>
<p>这部分的配置很简单，上下均选择Multiple BSSID即可，然后点击本模块的Apply按钮。<br>
<img src="https://lausuman.github.io/post-images/1681172107411.png" alt="" loading="lazy"></p>
<h1 id="无线物理设置">无线物理设置</h1>
<p>这里我们将会启用无线网卡，配置频段和速率。</p>
<h1 id="24g无线网卡设置">2.4G无线网卡设置</h1>
<p>前往NETWORK-&gt;NETWORK INTERFACE-&gt;Radio0-802.11N 2.4GHz，在右边选择SETTINGS选项卡。这里需要设置的内容有：</p>
<ul>
<li>Enable Radio：Enable</li>
<li>World Mode Multi-Domain Operation: Dot11d</li>
<li>Country Code：选择你所在的国家，右边根据你的部署位置选择Indoor和/或Outdoor</li>
<li>如果你需要配置AP工作在特定频率上，在DefaultRadio Channel选项处配置。</li>
</ul>
<p>配置完成后，点击页面右下角的Apply按钮。</p>
<h1 id="5g无线网卡设置">5G无线网卡设置</h1>
<p>前往NETWORK-&gt;NETWORK INTERFACE-&gt;Radio1-802.11N 5GHz（由于bug，这里可能会弹出一个新网页，在新网页上操作，操作完关闭即可）。</p>
<p>5G无线网卡的大部分设置和上一节2.4G无线网卡完全相同。唯一一点需要注意的是，由于bug，MCS Rates可能会被意外关闭而导致5G速率极低。在保存完配置后请检查MCS Rates部分，如果你看到的状态和下图类似，那么无需进行任何操作。<br>
<img src="https://lausuman.github.io/post-images/1681172143624.png" alt="" loading="lazy"></p>
<p>如果所有MCS Rate均被设为Disable，我们需要手工修改一下设置。打开Telnet客户端，输入AP的IP地址进行连接，使用和网页相同的用户名和密码登录，输入命令enable，再输入一次密码，接下来粘贴以下命令：</p>
<pre><code>configure terminal
interface Dot11Radio1
speed  6.0 9.0 basic-12.0 18.0 basic-24.0 36.0 48.0 basic-54.0 m0. m1. m2. m3. m4. m5. m6. m7. m8. m9. m10. m11. m12. m13. m14. m15.
</code></pre>
<p>如果操作无误的话，屏幕将会有类似下图的显示：<br>
<img src="https://lausuman.github.io/post-images/1681172193627.png" alt="" loading="lazy"></p>
<p>此时关闭Telnet客户端即可。</p>
<p>无线扩展模块<br>
如果你的3602i选装了802.11ac无线扩展模块，第三个无线网卡是不会出现在NETWORK-&gt;NETWORK INTERFACE列表里的，网页管理面板也无法对其做任何有效配置。</p>
<p>无线安全模块则对胖AP固件完全不兼容，想要玩的话还是老老实实搞个WLC。</p>
<h1 id="修改管理员密码">修改管理员密码</h1>
<p>前往SECURITY-&gt;Admin Access。</p>
<p>首先创建一个新用户：在Local User List里左边列表点击<NEW>，右边填写用户名和密码，Capability Settings选择Read-Write，点击右下角Apply按钮。</p>
<p>然后删掉系统默认用户：在Local User List里左边列表点击Cisco用户，点边上Delete按钮。</p>
<p>最后配置系统登录认证方式为本地用户：在页面上方的Administrator Authenticated by处选择Local User List Only (Individual Passwords)，点击该模块的Apply按钮。</p>
<h1 id="验证配置">验证配置</h1>
<p>如果你的配置正确，现在无线客户端已经可以搜索到你刚刚创建的SSID了。尝试连接一下，看是否能够正常连接。如果AP连接了至少一个客户端，LED指示灯会变成蓝色。</p>
<h1 id="保存设置">保存设置</h1>
<p>还记得吗，你在任何地方更改的设置都仅对本次开机生效，除非你点击了Save Configuration按钮。现在立即去保存一次设置吧！保存设置有时候需要一些时间，不要着急，弹出下图所示的窗口才算成功哦！</p>
<p>进阶折腾</p>
<p>开启SSH2</p>
<pre><code>enable
configure terminal
 
! 设置一个主机名（可选）
hostname test-ap
! 如果 DHCP 没有下发搜索域，那么需要随便设定一个域名
ip domain name example.com
 
! 生成RSA密钥对
crypto key generate rsa
! 运行时会提示输入密钥位数，建议使用2048
 
! 启用 SSH2 服务器
ip ssh version 2
SNTP网络自动对时
日志啊之类的时间不准，可以配置一下SNTP。参考下图配置即可。
</code></pre>
<h1 id="关闭led灯">关闭LED灯</h1>
<p>LED灯半夜会闪瞎眼，如果有需求的话可以关掉它。</p>
<pre><code>enable
configure terminal

! 关灯
led display off

! 开灯
no led display off
</code></pre>
<h1 id="band-select">Band Select</h1>
<p>Band Select功能可以让有5G能力但是连着2.4G网络的无线客户端自动连到5G上去，这是一个非常实用的功能。</p>
<p>首先去SERVICES-&gt;Band Select打开全局开关，然后去SECURITY-&gt;SSID Manager对每个需要此功能的SSID勾选Band Select即可。</p>
<h1 id="无线网桥">无线网桥</h1>
<p>两个Cisco AP是可以当无线网桥使用的，工作模式选择Bridge即可。双频AP还支持用一个频段做无线网桥，另一个频段还能当普通AP，允许普通无线客户端连入。不详述。</p>
<p>需要注意的是管理面板上的WDS功能并不是无线网桥，虽然有一些别的厂商把无线网桥功能也称为WDS。</p>
<p>在命令行下保存设置<br>
在退出configure模式以后可以使用write memory命令保存设置，功能和网页版的Save Configuration相同。</p>
<h1 id="常见错误">常见错误</h1>
<p>开了group key update可能导致无线客户端不断反复连接/掉线，尤以Windows为多<br>
开了ARP caching会有鬼故事<br>
开了WDS你的AP会卡爆</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[CS61A USB Lab1]]></title>
        <id>https://lausuman.github.io/post/cs61a-usb-lab1/</id>
        <link href="https://lausuman.github.io/post/cs61a-usb-lab1/">
        </link>
        <updated>2022-04-18T05:11:19.000Z</updated>
        <content type="html"><![CDATA[<p>Q4: Falling Factorial</p>
<pre><code>def falling(n, k):
	&quot;&quot;&quot;Compute the falling factorial of n to depth k.

	&gt;&gt;&gt; falling(6, 3)  # 6 * 5 * 4
	120
	&gt;&gt;&gt; falling(4, 3)  # 4 * 3 * 2
	24
	&gt;&gt;&gt; falling(4, 1)  # 4
	4
	&gt;&gt;&gt; falling(4, 0)
	1
	&quot;&quot;&quot;
	&quot;*** YOUR CODE HERE ***&quot;
	if k == 0:
		print(&quot;1&quot;)
	else:
		prod = 1
		while k &gt; 0:
			prod *= n
			n -= 1
			k -= 1
		print(prod)

def sum_digits(y):
	&quot;&quot;&quot;Sum all the digits of y.

	&gt;&gt;&gt; sum_digits(10) # 1 + 0 = 1
	1
	&gt;&gt;&gt; sum_digits(4224) # 4 + 2 + 2 + 4 = 12
	12
	&gt;&gt;&gt; sum_digits(1234567890)
	45
	&gt;&gt;&gt; a = sum_digits(123) # make sure that you are using return rather than print
	&gt;&gt;&gt; a
	6
	&quot;&quot;&quot;
	&quot;*** YOUR CODE HERE ***&quot;
	ans = 0
	while y &gt; 0:
		ans +=(y % 10)
		y -=y % 10
		y //= 10
		pass
</code></pre>
<p>Q5: Sum Digits</p>
<pre><code>def double_eights(n):
	&quot;&quot;&quot;Return true if n has two eights in a row.
	&gt;&gt;&gt; double_eights(8)
	False
	&gt;&gt;&gt; double_eights(88)
	True
	&gt;&gt;&gt; double_eights(2882)
	True
	&gt;&gt;&gt; double_eights(880088)
	True
	&gt;&gt;&gt; double_eights(12345)
	False
	&gt;&gt;&gt; double_eights(80808080)
	False
	&quot;&quot;&quot;
	&quot;*** YOUR CODE HERE ***&quot;
	ans = 0
	while n &gt; 0:
		ans = (n % 10)
		if ans == 8 and ((n-ans)//10)%10 == 8:
			return True
		n -=n % 10
		n //= 10
		pass
	return False</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[CS61A USB Hw1]]></title>
        <id>https://lausuman.github.io/post/cs61a-usb-hw1/</id>
        <link href="https://lausuman.github.io/post/cs61a-usb-hw1/">
        </link>
        <updated>2022-04-18T04:35:49.000Z</updated>
        <content type="html"><![CDATA[<p>Q2: A Plus Abs B</p>
<pre><code>def a_plus_abs_b(a, b):
	&quot;&quot;&quot;Return a+abs(b), but without calling abs.

	&gt;&gt;&gt; a_plus_abs_b(2, 3)
	5
	&gt;&gt;&gt; a_plus_abs_b(2, -3)
	5
	&gt;&gt;&gt; # a check that you didn't change the return statement!
	&gt;&gt;&gt; import inspect, re
	&gt;&gt;&gt; re.findall(r'^\s*(return .*)', inspect.getsource(a_plus_abs_b), re.M)
	['return f(a, b)']
	&quot;&quot;&quot;
	if b &lt; 0:
		f = sub
	else:
		f = add
	return f(a, b)
</code></pre>
<p>Q3: Two of Three</p>
<pre><code>def two_of_three(x, y, z):
	&quot;&quot;&quot;Return a*a + b*b, where a and b are the two smallest members of the
	positive numbers x, y, and z.

	&gt;&gt;&gt; two_of_three(1, 2, 3)
	5
	&gt;&gt;&gt; two_of_three(5, 3, 1)
	10
	&gt;&gt;&gt; two_of_three(10, 2, 8)
	68
	&gt;&gt;&gt; two_of_three(5, 5, 5)
	50
	&gt;&gt;&gt; # check that your code consists of nothing but an expression (this docstring)
	&gt;&gt;&gt; # a return statement
	&gt;&gt;&gt; import inspect, ast
	&gt;&gt;&gt; [type(x).__name__ for x in ast.parse(inspect.getsource(two_of_three)).body[0].body]
	['Expr', 'Return']
	&quot;&quot;&quot;
	return  min(x,y,z)*min(x,y,z) + max(min(x,y),min(x,z),min(z,y))*max(min(x,y),min(x,z),min(z,y))
</code></pre>
<p>Q4: Largest Factor</p>
<pre><code>def largest_factor(n):
	&quot;&quot;&quot;Return the largest factor of n that is smaller than n.

	&gt;&gt;&gt; largest_factor(15) # factors are 1, 3, 5
	5
	&gt;&gt;&gt; largest_factor(80) # factors are 1, 2, 4, 5, 8, 10, 16, 20, 40
	40
	&gt;&gt;&gt; largest_factor(13) # factor is 1 since 13 is prime
	1
	&quot;&quot;&quot;
	&quot;*** YOUR CODE HERE ***&quot;
	a = n - 1
	while a &gt; 0:
		if n % a == 0:
			return a
		a -= 1
</code></pre>
<p>Q5: If Function vs Statement</p>
<pre><code>def if_function(condition, true_result, false_result):
	&quot;&quot;&quot;Return true_result if condition is a true value, and
	false_result otherwise.

	&gt;&gt;&gt; if_function(True, 2, 3)
	2
	&gt;&gt;&gt; if_function(False, 2, 3)
	3
	&gt;&gt;&gt; if_function(3==2, 'equal', 'not equal')
	'not equal'
	&gt;&gt;&gt; if_function(3&gt;2, 'bigger', 'smaller')
	'bigger'
	&quot;&quot;&quot;
	if condition:
		return true_result
	else:
		return false_result

def with_if_statement():
	&quot;&quot;&quot;
	&gt;&gt;&gt; result = with_if_statement()
	61A
	&gt;&gt;&gt; print(result)
	None
	&quot;&quot;&quot;
	if cond():
		return true_func()
	else:
		return false_func()
def with_if_function():
	&quot;&quot;&quot;
	&gt;&gt;&gt; result = with_if_function()
	Welcome to
	61A
	&gt;&gt;&gt; print(result)
	None
	&quot;&quot;&quot;
	return if_function(cond(), true_func(), false_func())

def cond():
	&quot;*** YOUR CODE HERE ***&quot;
	return False
def true_func(): 
	&quot;*** YOUR CODE HERE ***&quot;
	print(&quot;Welcome to&quot;)
def false_func():
	&quot;*** YOUR CODE HERE ***&quot;
	print(&quot;61A&quot;)
</code></pre>
<p>Q6: Hailstone</p>
<pre><code>
def hailstone(n):
	&quot;&quot;&quot;Print the hailstone sequence starting at n and return its
	length.

	&gt;&gt;&gt; a = hailstone(10)
	10
	5
	16
	8
	4
	2
	1
	&gt;&gt;&gt; a
	7
	&quot;&quot;&quot;
	&quot;*** YOUR CODE HERE ***&quot;
	x = 1
	while n != 1:
		if n % 2 == 0 :
			print(n)
			n = n // 2
		else:
			print(n)
			n = n * 3 + 1
		x += 1
		pass
	print(n)
	return x 
</code></pre>
]]></content>
    </entry>
</feed>